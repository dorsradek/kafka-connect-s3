/*
  Copyright 2020 Adobe. All rights reserved.
  This file is licensed to you under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License. You may obtain a copy
  of the License at http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software distributed under
  the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
  OF ANY KIND, either express or implied. See the License for the specific language
  governing permissions and limitations under the License.
*/
plugins {
  id 'base'
  id 'java'
  id 'maven-publish'
  id 'com.palantir.git-version' version '0.12.3'
  id 'com.github.johnrengelman.shadow' version '6.1.0'
}

description = "kafka-connect-s3"
apply from: 'dependencies.gradle'

version = System.getenv("PROJECT_VERSION") ?: getProjectVersion()

allprojects {
  apply plugin: 'java'
  apply plugin: 'idea'
  apply plugin: 'maven'

  group = 'com.spredfast.kafka.connect.s3'
  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  repositories {
    jcenter()
    maven { url "https://repo.maven.apache.org/maven2" }
  }
}

dependencies {
  compile project(':sink')
  compile project(':source')
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from subprojects*.tasks.javadoc.destinationDir
}

task sourcesJar(type: Jar) {
  from subprojects*.sourceSets.main.allSource
  classifier = 'sources'
}

jar {
  from subprojects*.sourceSets.main.output
}

artifacts {
  archives javadocJar, sourcesJar
}

shadowJar {
  dependencies {
    // provided in the connect classpath
    exclude(dependency('org.apache.kafka:connect-api'))
    exclude(dependency('org.apache.kafka:kafka-clients'))
    exclude(dependency('org.lz4:lz4-java'))
    exclude(dependency('org.xerial.snappy:.*:.*'))
    exclude(dependency('org.slf4j:.*:.*'))
  }
  relocate 'com.amazonaws', 'com.spredfast.shade.amazonaws'
  relocate 'com.fasterxml', 'com.spredfast.shade.fasterxml'
  relocate 'org.apache.commons', 'com.spredfast.shade.apache.commons'
  relocate 'org.apache.http', 'com.spredfast.shade.apache.http'
  relocate 'org.joda', 'com.spredfast.shade.joda'
}

def getProjectVersion() {
  def tag = 'git describe --abbrev=0 --tags'.execute().text.trim()
  def sha = 'git rev-parse --verify --short HEAD'.execute().text.trim()
  return tag + '-' + sha
}
